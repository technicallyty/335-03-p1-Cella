Tyler Goodman
Waleed Ali
Professor Siska
CPSC-335
14 September 2020

Project 1 Cella Ant #x15 - Big O

We have determined that, since our code (not P5's) runs with a constant dataset, the algorithm is O(1). 
That is not to say there is more to analyze, however. Let's begin with the code we implemented in setup. 
Everything before move is just assignments, so this section is simply O(1). Then we move on to our first call to the function move(). 
Similarly, this function is mostly assignments. We do have some logic with switch/case and if/else statements here though. 
However, since our data never changes, these don't really affect our big picture calculation. We are still left with O(1). 
Now we enter our draw_update(). Here we do two things. First we draw_bot(), and then we move_bot(). 
Since we already discussed how moving works, we can analyze the draw function. Again, similarly to the rest of the program, 
we are simply assigning things here. We do have a couple functions we implemented to help with color. Firstly we have rgbToHex. 
This takes the rgba values given to us by P5's get function and converts them to a hex string. This function runs in constant time. 
Then we have getNextColor(). This switches through the given color, and returns the next color in the sequence. At worst, given green, 
it will run O(5), but this isn't really relevant so we say O(1). The draw function ends with more assignments. 
Overall, since all we are doing is assigning, and going through a set amount of switch/cases, we can say our algorithm is constant - O(1). 
	
